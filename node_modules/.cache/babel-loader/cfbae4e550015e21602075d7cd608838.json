{"ast":null,"code":"export const script = `\nimport NonFungibleToken from 0x1d7e57aa55817448\nimport BloctoPass from 0x0f9df91c9121c460\n\npub fun main( timestamp: UFix64, addr: Address) : [UFix64] {\n\n  let ref = getAccount(addr).getCapability<&{NonFungibleToken.CollectionPublic, BloctoPass.CollectionPublic}>(BloctoPass.CollectionPublicPath)\n            .borrow() ?? panic (\"You dont have a Blocto Pass\")\n  \n  let ids = ref.getIDs()\n  let length = UInt64(ref.getIDs().length) - 1\n  let id = ids[length]\n\n  let passRef = ref.borrowBloctoPassPublic(id: id)\n  let lockupSchedule = passRef.getLockupSchedule()\n  let lockupAmount = passRef.getLockupAmount()\n\n  // Function to decode the unlocking schedule and amount\n\n  let keys = lockupSchedule.keys\n  var closestTimestamp = UFix64.max\n  var lockupPercentage = UFix64.max\n\n  for key in keys {\n      if timestamp <= key && key <= closestTimestamp {\n          lockupPercentage = lockupSchedule[key]!\n          closestTimestamp = key\n      }\n  }\n\n  let amount = lockupAmount * lockupPercentage\n\n  return [closestTimestamp , amount]\n\n} \n`;","map":{"version":3,"sources":["C:/Users/benh6/Documents/GitHub/Locked-token-check/src/cadence/code.js"],"names":["script"],"mappings":"AAEA,OAAO,MAAMA,MAAM,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnCO","sourcesContent":["\r\n\r\nexport const script = `\r\nimport NonFungibleToken from 0x1d7e57aa55817448\r\nimport BloctoPass from 0x0f9df91c9121c460\r\n\r\npub fun main( timestamp: UFix64, addr: Address) : [UFix64] {\r\n\r\n  let ref = getAccount(addr).getCapability<&{NonFungibleToken.CollectionPublic, BloctoPass.CollectionPublic}>(BloctoPass.CollectionPublicPath)\r\n            .borrow() ?? panic (\"You dont have a Blocto Pass\")\r\n  \r\n  let ids = ref.getIDs()\r\n  let length = UInt64(ref.getIDs().length) - 1\r\n  let id = ids[length]\r\n\r\n  let passRef = ref.borrowBloctoPassPublic(id: id)\r\n  let lockupSchedule = passRef.getLockupSchedule()\r\n  let lockupAmount = passRef.getLockupAmount()\r\n\r\n  // Function to decode the unlocking schedule and amount\r\n\r\n  let keys = lockupSchedule.keys\r\n  var closestTimestamp = UFix64.max\r\n  var lockupPercentage = UFix64.max\r\n\r\n  for key in keys {\r\n      if timestamp <= key && key <= closestTimestamp {\r\n          lockupPercentage = lockupSchedule[key]!\r\n          closestTimestamp = key\r\n      }\r\n  }\r\n\r\n  let amount = lockupAmount * lockupPercentage\r\n\r\n  return [closestTimestamp , amount]\r\n\r\n} \r\n`"]},"metadata":{},"sourceType":"module"}